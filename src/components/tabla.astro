---

// Tipos TypeScript
interface Invoice {
  id: number;
  number: string;
  names: string;
  identification: string;
  total: string;
  status: number;
  created_at: string;
  document: { name: string };
  credit_notes: Array<{ number: string }>;
  debit_notes: Array<{ number: string }>;
}

// Variables reactivas para el cliente
let invoices: Invoice[] = [];
let loading = true;
let error = '';
let searchQuery = '';
---

<!-- Solo se ejecuta en el cliente -->
<script is:inline>
document.addEventListener('DOMContentLoaded', async () => {
  try {
    const accessToken = localStorage.getItem('accessToken');
    if (!accessToken) throw new Error('No se encontró token de acceso');
    
    const response = await fetch('https://api-sandbox.factus.com.co/v1/bills', {
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (!response.ok) throw new Error(`Error ${response.status}: ${response.statusText}`);
    
    const data = await response.json();
    invoices = data.data.data || [];
  } catch (err) {
    error = err.message;
  } finally {
    loading = false;
    renderTable(); // Actualizar la UI
  }
});

function renderTable() {
  const tableBody = document.getElementById('invoice-table-body');
  if (!tableBody) return;
  
  tableBody.innerHTML = invoices
    .filter(invoice => 
      invoice.number.toLowerCase().includes(searchQuery.toLowerCase()) ||
      invoice.names?.toLowerCase().includes(searchQuery.toLowerCase())
    )
    .map(invoice => `
      <tr class="hover:bg-gray-50 transition-colors">
        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${invoice.number}</td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${invoice.names || 'N/A'}</td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${invoice.identification || 'N/A'}</td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${formatCurrency(invoice.total)}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="px-2.5 py-0.5 rounded-full text-xs font-medium ${
            invoice.status === 1 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
          }">
            ${invoice.status === 1 ? 'Validada' : 'Pendiente'}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${formatDate(invoice.created_at)}</td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
          <div class="flex space-x-2 justify-end">
            <button class="text-blue-600 hover:text-blue-900" title="Ver detalle">
              <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
              </svg>
            </button>
            <button class="text-green-600 hover:text-green-900" title="Descargar PDF">
              <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
              </svg>
            </button>
          </div>
        </td>
      </tr>
    `).join('');
}

function formatDate(dateStr) {
  if (!dateStr) return '';
  const [date, time] = dateStr.split(' ');
  return date.split('-').reverse().join('/') + (time ? ` ${time}` : '');
}

function formatCurrency(amount) {
  return new Intl.NumberFormat('es-CO', {
    style: 'currency',
    currency: 'COP',
    minimumFractionDigits: 2
  }).format(parseFloat(amount));
}

function handleSearch(e) {
  searchQuery = e.target.value;
  renderTable();
}
</script>

<!-- UI del componente -->
<div class="max-w-7xl mx-auto px-4 py-8">
  <!-- Encabezado -->
  <div class="sm:flex sm:items-center sm:justify-between mb-6">
    <div>
      <h1 class="text-2xl font-bold text-gray-900">Gestión de Facturas</h1>
      <p class="mt-1 text-sm text-gray-600">Listado completo de facturas electrónicas</p>
    </div>
    <div class="mt-4 sm:mt-0">
      <div class="relative rounded-md shadow-sm">
        <input
          type="text"
          placeholder="Buscar factura..."
          class="block w-full rounded-md border-gray-300 pr-10 focus:border-blue-500 focus:ring-blue-500 sm:text-sm p-2 border"
          oninput="handleSearch(event)"
        />
        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3">
          <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
          </svg>
        </div>
      </div>
    </div>
  </div>

  <!-- Estado de carga -->
  <div id="loading-state" class={`flex justify-center items-center py-12 ${!loading && 'hidden'}`}>
    <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
  </div>

  <!-- Mensaje de error -->
  <div id="error-state" class={`rounded-md bg-red-50 p-4 mb-6 ${!error && 'hidden'}`}>
    <div class="flex">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
        </svg>
      </div>
      <div class="ml-3">
        <h3 class="text-sm font-medium text-red-800">Error al cargar facturas</h3>
        <div class="mt-2 text-sm text-red-700">
          <p id="error-message">{error}</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Tabla de facturas -->
  <div id="table-container" class={`bg-white shadow overflow-hidden sm:rounded-lg ${loading && 'hidden'}`}>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Número</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cliente</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Identificación</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
          </tr>
        </thead>
        <tbody id="invoice-table-body" class="bg-white divide-y divide-gray-200">
          <!-- Las filas se generan dinámicamente con JavaScript -->
        </tbody>
      </table>
    </div>
  </div>
</div>

<style>
  /* Estilos personalizados */
  .max-w-7xl {
    max-width: 90rem;
  }
  .transition-colors {
    transition-property: background-color, border-color, color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
</style>